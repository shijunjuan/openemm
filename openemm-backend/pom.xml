<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.openemm</groupId>
		<artifactId>openemm</artifactId>
		<version>2013.1-SNAPSHOT</version>
		<relativePath>../</relativePath>
	</parent>

	<artifactId>openemm-backend</artifactId>
	<packaging>pom</packaging>

	<name>OpenEMM Backend</name>

	<build>
		<plugins>
			<!-- This maven assembly plugin bundles the backend files
					 and configurations into a single zip file -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>2.4</version>
				<executions>
					<execution>
						<id>make-assembly</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
						<configuration>
							<descriptors>
								<descriptor>src/assemble/bin.xml</descriptor>
							</descriptors>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<!-- The maven-antrun-plugin allows to migrate the ant build
					 into the maven build lifecicle --> 
			<plugin>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.7</version>
				<executions>
					<execution>
						<id>check-build-stamp</id>
						<phase>compile</phase>
						<configuration>
							<target name="check-build-stamp">
								<available property="native.build.stamp" file="${project.build.directory}/build/.build-stamp" />
								<echo message="Build stamp present, skipping module build (${native.build.stamp})" />
							</target>
							<exportAntProperties>true</exportAntProperties>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
					<execution>
						<id>compile-backend</id>
						<phase>compile</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<target name="compile-backend" unless="native.build.stamp">
								<echo message="*** Building OpenEMM Backend - Native compilation ***" />
								<!-- Configuration properties, shortcuts from maven property names -->
								<property name="target" value="${project.build.directory}\build" />
								<property name="native.src" value="${project.build.directory}\..\src\main\native" />
								<property name="generated.src" value="${project.build.directory}\generated-sources" />
								<property name="resources" value="${project.build.directory}\..\src/main/resources" />
								<property name="scripts" value="${project.build.scriptSourceDirectory}" />

								<!-- Prepares bundled source for native compilation -->
								<copy todir="${generated.src}">
									<fileset dir="${resources}/contrib" />
								</copy>
								<copy todir="${generated.src}">
									<filelist dir="${scripts}" files="make_backend.sh" />
								</copy>
								<copy todir="${generated.src}/src/c">
									<fileset dir="${native.src}" />
								</copy>

								<!-- Filter make_backend.sh script -->
								<replace file="${generated.src}/make_backend.sh" token="$OE_HOME" value="${target}" />
								<replace file="${generated.src}/make_backend.sh" token="$SRC" value="${generated.src}" />
								<replace file="${generated.src}/src/c/xmlback/GNUmakefile" token="$(HOME)" value="${target}" />
								<chmod file="${generated.src}/make_backend.sh" perm="a+x" verbose="true" />

								<!-- Compile all backend modules -->
								<exec executable="bash" dir="${generated.src}" >
								<arg line="./make_backend.sh"/>
								</exec>

								<!-- Move resulting files to target folder -->
								<copy todir="${target}\bin">
									<fileset  dir="${scripts}/control" />
									<!--<filelist dir="${generated.src}/src/c/bav" files="bav"/>-->
									<!--<filelist dir="${generated.src}/src/c/tools" files="qctrl,smctrl,updater"/>-->
									<!--<filelist dir="${generated.src}/src/c/xmlback" files="xmlback"/>-->
									<fileset  dir="${scripts}/tomcat/bin" />
								</copy>
								<copy todir="${target}/bin/scripts">
									<fileset dir="${scripts}/process" />
									<!--<filelist dir="${generated.src}/src/c/bav" files="bavwrap" />-->
									<filelist dir="${scripts}/lib" files="agn.py,aps.py,config.sh" />
								</copy>
								<move todir="${target}/conf/semu">
									<fileset dir="${target}/bin/scripts/semu" />
								</move>
								<move todir="${target}/USR_SHARE" file="${target}/bin/scripts/upgrade-postproc.sh" />
								<exec executable="ln" dir="${target}/bin/scripts">
									<arg line="-s bavwrap filter_or_forward" />
								</exec>
								<exec executable="ln" dir="${target}/bin/scripts">
									<arg line="-s bavwrap is_no_systemmail" />
								</exec>
								<exec executable="ln" dir="${target}/bin/scripts">
									<arg line="-s bavwrap scan_and_unsubscribe" />
								</exec>
								<copy todir="${target}/conf">
									<fileset dir="${scripts}/tomcat/conf"/>
								</copy>
								<!--<copy todir="${target}/conf/bav">
									<fileset dir="${scripts}/data" />
								</copy>-->
								<copy todir="${target}/conf/upgrade">
									<fileset dir="${scripts}/process/upgrade" />
								</copy>
								<mkdir dir="${target}/var/lock" />
								<mkdir dir="${target}/var/log" />
								<mkdir dir="${target}/var/run" />
								<mkdir dir="${target}/var/spool/bav" />
								<mkdir dir="${target}/var/spool/filter" />
								<mkdir dir="${target}/var/spool/log" />
								<mkdir dir="${target}/var/spool/ADMIN" />
								<mkdir dir="${target}/var/spool/ARCHIVE" />
								<mkdir dir="${target}/var/spool/DELETED" />
								<mkdir dir="${target}/var/spool/META" />
								<mkdir dir="${target}/var/spool/QUEUE" />
								<mkdir dir="${target}/var/spool/RECOVER" />
								<mkdir dir="${target}/plugins" />
								<mkdir dir="${target}/temp" />

								<!-- Fixes permissions, users and groups to keep compatibility -->
								<chgrp group="openemm" type="both" verbose="true">
									<fileset dir="${target}" />
								</chgrp>
								<chown owner="openemm" type="both" verbose="true">
									<fileset dir="${target}"/>
								</chown>
								<chgrp group="root" verbose="true">
									<fileset dir="${target}">
										<include name="bin/qctrl" />
										<include name="bin/smctrl" />
										<include name="bin/updater" />
										<include name="conf/bav/bav.rc" />
									</fileset>
								</chgrp>
								<chown owner="root" verbose="true">
									<fileset dir="${target}">
										<include name="bin/qctrl" />
										<include name="bin/smctrl" />
										<include name="bin/updater" />
										<include name="conf/bav/bav.rc" />
									</fileset>
								</chown>
								<chmod dir="${target}/bin" perm="a+x" includes="**/*" verbose="true" />
								<chmod file="${target}/USR_SHARE/upgrade-postproc.sh" perm="a+x" verbose="true" />
								<chmod file="${target}/conf/bav/bav.rc" perm="600" verbose="true" />
								<exec executable="chmod" dir="${target}/bin">
									<arg line="6755 qctrl smctrl updater" />
								</exec>

								<!-- Speed up repackaging build by touching a stamp file -->
								<touch file="${target}/.build-stamp" />
							</target>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
</project>
